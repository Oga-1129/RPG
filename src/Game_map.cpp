#include <iostream>
#include <string>
#include "rpg.h"

using namespace std;


int setmap[20][30] = 
	   {{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	    {0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0},
	    {0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0},
	    {0,1,1,1,5,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0},
	    {0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0},
		{0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0},
		{0,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0},
		{0,1,1,1,1,1,1,1,1,1,1,1,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0},
		{0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0},
		{0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0},
		{0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0},
		{0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0},
		{0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,1,1,1,1,1,1,1,1,1,1,1,0},
		{0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,0},
		{0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,0},
		{0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,0},
		{0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,0},
		{0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,0},
		{0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,6,0},
		{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
	};

//mapのコンストラクタ
Game_map::Game_map()
{
	for(int my = 0;20 > my;my++)
	{
		for(int mx = 0;30 > mx; mx++)
		{
			this->map[my][mx] = setmap[my][mx];
			play_map[my][mx] = this->map[my][mx];
		}
	}
}


//mapの表示
void Game_map::show_map(Player p[])
{
	
	for(int ry = 0; 20 > ry; ry++)
	{
		for(int rx = 0; 30 > rx; rx++)
		{
			map[ry][rx] = play_map[ry][rx];
		}
	}

	this->map[p[0].x1][p[0].y1] = 9;

	for(int y = 0; 20 > y; y++)
	{
		for(int x = 0; 30 > x; x++)
		{
			switch(map[y][x])
			{
				case 0: cout << "＋"; break;
				case 1: cout << "　"; break;
				case 2: cout << "山"; break;
				case 3: cout << "Ａ"; break;
				case 4: cout << "Ｂ"; break;
				case 5: cout << "街"; break;
				case 6: cout << "Ｇ"; break;
				case 9: cout << "主"; break;
			}
		}
		cout << endl;
	}
}

//mapの当たり判定
void Game_map::map_collision(Player p[])
{
	//障害物に当たった場合
	if(this->map[p[0].x1][p[0].y1] == 0 || this->map[p[0].x1][p[0].y1] == 2)
	{
		output( "障害物に当たりました。");
		p[0].x1 = p[0].x2;
		p[0].y1 = p[0].y2;
	}
}


//mapのmainの動き
void Game_map::map_main(Player p[], Game_map game_map, Game_main game_main)
{
	Dungeon dungeon;
	City city;

	p[0].x2 = p[0].x1;
	p[0].y2 = p[0].y1;

	//プレイヤーの移動
	p[0].move_player(&p);

	//mapの当たり判定
	this->map_collision(p);

	//ダンジョン入り口Aに座標が重なったかの判定
	if(this->map[p[0].x1][p[0].y1] == 3)
	{
		game_main.judge_dungeon = 1;
	}
	//ダンジョン入り口Bに座標が重なったかの判定
	else if(this->map[p[0].x1][p[0].y1] == 4)
	{
		game_main.judge_dungeon = 2;
	}
	//街に座標が重なったかの判定
	else if(this->map[p[0].x1][p[0].y1] == 5)
	{
		output("街に入った");
		game_main.judge_city = 1;
	}
	//ゴールした時
	else if(this->map[p[0].x1][p[0].y1] == 6){
		game_main.judge_goal = 1;
	}
	//ダンジョンに入っていない時
	if(game_main.judge_dungeon == 0)
	{
		//街に入った時
		if(game_main.judge_city == 1)
		{	
			//街の行動
			city.city_main(p, &game_main);
		}
	}
	//ダンジョンに入った時
	else{
		//ダンジョンの行動
		dungeon.dungeon_main(p, game_map, game_main);
	}
}